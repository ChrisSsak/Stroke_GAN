# -*- coding: utf-8 -*-
"""stroke_dataset_gen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UsyOghsUJc06c267q3KRLPCldzRDYscB
"""

import numpy as np
import cv2
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

def normal(x, width):
    return (int)(x * (width - 1) + 0.5)
    
def draw(f, width=250):
   # canvas=canvass.copy()
    x0, y0, x1, y1, x2, y2, z0, z2, w0, w2 =f
    x1 = x0 + (x2 - x0) * x1
    y1 = y0 + (y2 - y0) * y1
    x0 = normal(x0, width * 2)
    x1 = normal(x1, width * 2)
    x2 = normal(x2, width * 2)
    y0 = normal(y0, width * 2)
    y1 = normal(y1, width * 2)
    y2 = normal(y2, width * 2)
    z0 = (int)(1 + z0 * width // 2)
    z2 = (int)(1 + z2 * width // 2)

    
   # canvas=canvas.astype('float32')
   # canvas= cv2.resize(canvas, dsize=(width*2, width*2))
    canvas = np.zeros([width * 2, width * 2]).astype('float32')
    if (x0==0 or y0<0 or x1<0 or y1<0 or x2<0 or y2<0 or z0<0 or z2<0 or w0<0 or w2<0):
      return canvas
    tmp = 1. / 100
    for i in range(100):
        t = i * tmp
        x = (int)((1-t) * (1-t) * x0 + 2 * t * (1-t) * x1 + t * t * x2)
        y = (int)((1-t) * (1-t) * y0 + 2 * t * (1-t) * y1 + t * t * y2)
        z = (int)((1-t) * z0 + t * z2)
        w = (1-t) * w0 + t * w2
        cv2.circle(canvas, (y, x), z, w, -1)
    return  1-cv2.resize(canvas, dsize=(width, width))

xtrain=[]#param
ytrain=[]#strokes

for i in range(0,10000):
  if i>400:
     random_param=np.random.uniform(low=0, high=1, size=(10,))
    
  else:
     random_param=np.random.uniform(low=0, high=0.4, size=(10,))
  xtrain.append(random_param)
  result=draw(random_param)
  ytrain.append(result)

xtrain=np.array(xtrain)
ytrain=np.array(ytrain)

print(xtrain.shape)
print(ytrain.shape)

plt.imshow(ytrain[129])

k=draw(xtrain[129])
plt.imshow(k)

xtrain[0]

xtrain[270]

xtrain[790]

xtrain[951]



np.savez('/content/drive/MyDrive/Yr3Project/strokedataset.npz', xtrain, ytrain)

kk=np.array([0.0467559 , 0.14104397, 0.97155748, 0.42250787, 0.66401355,
       0.16128475, 0.32551035, 0.31487202, 0.08491706, 0.900449])

kkk=draw(kk)

plt.imshow(kkk)

